FROM nginx:stable

ENV DEBIAN_FRONTEND noninteractive

### UPDATE DEBIAN
RUN apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y
RUN apt-get update -y && apt-get install -y xz-utils netcat openconnect wget curl bash-completion python zip git vim htop sudo

### INSTALL PHP-FPM AND EXTENSION
RUN apt-get update -y && apt-get install -y php5-fpm php5-curl php5-gd php5-imagick php5-json php5-mcrypt php5-mysqlnd libpng12-dev libjpeg-dev libpq-dev imagemagick mysql-client libfontconfig1 php5-xdebug
RUN apt-get update -y && apt-get install -y php-apc php-pear

### INSTALL NODEJS
RUN set -ex \
  && for key in \
    9554F04D7259F04124DE6B476D5A82AC7E37093B \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \
    FD3A5288F042B6850C66B31F09FE44734EB7990E \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    B9AE9905FFD7803F25714661B63B535A4C206CA9 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
  ; do \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
  done

ENV NPM_CONFIG_LOGLEVEL info
ENV NODE_VERSION 4.4.4
RUN curl -k -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \
  && curl -k -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1 \
  && rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt

### INSTALL DRUSH
RUN wget http://files.drush.org/drush.phar
RUN chmod +x drush.phar
RUN mv drush.phar /usr/local/bin/drush

RUN npm install -g gulp
RUN npm install -g npm@3.x.x

### CREATE USER FOR DEVELOPMENT
RUN echo "%sudo ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    useradd -u 1000 -G www-data,sudo -d /pece --shell /bin/bash -m pece && \
    echo "secret\nsecret" | passwd pece

COPY ./docker/bash.bashrc /etc/bash.bashrc
RUN chmod +x /etc/bash.bashrc
ADD ./docker/docker-entrypoint.sh /pece/docker-entrypoint.sh
RUN chmod +x /pece/docker-entrypoint.sh

### CONFIGURE PHP-FPM
RUN echo "xdebug.max_nesting_level=9999" >> /etc/php5/mods-available/xdebug.ini
RUN sed -i "s/;date.timezone =.*/date.timezone = UTC/" /etc/php5/fpm/php.ini && \
    sed -i "s/memory_limit = 128M/memory_limit = 256M/" /etc/php5/fpm/php.ini && \
    sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php5/fpm/php.ini && \
    sed -i "s/display_errors = Off/display_errors = stderr/" /etc/php5/fpm/php.ini && \
    sed -i "s/upload_max_filesize = 2M/upload_max_filesize = 30M/" /etc/php5/fpm/php.ini && \
    sed -i "s/;opcache.enable=0/opcache.enable=1/" /etc/php5/fpm/php.ini && \
    sed -i -e "s/;daemonize\s*=\s*yes/daemonize = no/g" /etc/php5/fpm/php-fpm.conf && \
    sed -i '/^listen = /clisten = 9000' /etc/php5/fpm/pool.d/www.conf && \
    sed -i '/^listen.allowed_clients/c;listen.allowed_clients =' /etc/php5/fpm/pool.d/www.conf && \
    sed -i '/^;catch_workers_output/ccatch_workers_output = yes' /etc/php5/fpm/pool.d/www.conf && \
    sed -i '/^;env\[TEMP\] = .*/aenv[DB_PORT_3306_TCP_ADDR] = $DB_PORT_3306_TCP_ADDR' /etc/php5/fpm/pool.d/www.conf

USER pece
WORKDIR /pece

RUN drush init -y
RUN cd ~/.drush && git clone -b local_workflow_improvements --single-branch https://github.com/TallerWebSolutions/kraftwagen.git
RUN cd ~/.drush && drush cc drush

CMD [ "bash" ]
ENTRYPOINT ["/pece/docker-entrypoint.sh"]
