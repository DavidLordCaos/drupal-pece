<?php

/**
 * @file
 * Code for the PECE Panels.
 */

/**
 * Implements hook_module_implements_alter().
 */
function pece_panels_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['pece_panels'])) {
    $group = $implementations['pece_panels'];
    unset($implementations['pece_panels']);
    $implementations['pece_panels'] = $group;
  }
}

/**
 * Implements hook_menu_alter().
 */
function pece_panels_menu_alter(&$items) {
  $node_info = entity_get_info('node');
  $node_view_modes = array_keys($node_info['view modes']);

  foreach ($node_view_modes as $view_mode) {
    $path = 'node/%node/panelizer/' . $view_mode . '/reset';

    if (!empty($items[$path])) {
      $items[$path]['access callback'] = 'pece_panels_panelizer_reset_access_callback';
      $items[$path]['access arguments'] = array(1);
    }
  }
}

/**
 * Access callback for resetting a node's panelizer. It should always be TRUE when
 * user has updating access to the node.
 */
function pece_panels_panelizer_reset_access_callback($node) {
  $handler = panelizer_entity_plugin_get_handler('node');
  return $handler->entity_access('update', $node);
}

/**
 * Implements hook_panels_ipe_access().
 *
 * Control access to IPE when using panelizer.
 */
function pece_panels_panels_ipe_access($display) {
  // Verify if we are working with a panelized display.
  if (!empty($display->context['panelizer'])) {
    $panelizer = $display->context['panelizer'];
    $entity_type = end(array_values($panelizer->type));
    $entity = $panelizer->data;

    $access_result = module_invoke_all('panelizer_ipe_access', $display, $entity_type, $entity);

    // Deny first.
    return in_array(TRUE, $access_result);
  }

  // Deny first.
  return FALSE;
}

/**
 * Implements hook_panelizer_access().
 */
function pece_panels_panelizer_access($op, $entity_type, $bundle, $view_mode, $entity) {
  if ($entity_type !== 'node') {
    return FALSE;
  }

  // Allow resetting to default, but prevent override.
  if ($op === 'defaults' && !empty($entity) && !empty($entity->panelizer[$view_mode]->did)) {
    return TRUE;
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for panels_ipe_edit_control_form().
 *
 * Alter the IPE save control form to hide revisioning info.
 */
function pece_panels_form_panels_ipe_edit_control_form_alter(&$form, &$form_state) {
  if (!empty($form['revision_information'])) {
    $form['revision_information']['#access'] = FALSE;
  }
}
