<?php
/**
 * @file
 * Installation code for the PECE Design Logic feature.
 */

/**
 * Implements hook_install().
 */
function pece_design_logic_install() {
  _pece_design_logic_install_entity_config();
  _pece_design_logic_ensure_entities();
}

/**
 * Setup design logic entity configurations.
 */
function _pece_design_logic_install_entity_config() {
  // 1. Enable pathauto for the design_logic entity type.
  $value = variable_get('pathauto_entity_available_entity_types', array());
  $value['design_logic'] = 'design_logic';
  variable_set('pathauto_entity_available_entity_types', $value);
  variable_set('pathauto_design_logic_pattern', 'design-logic/[design_logic:title]');
}

/**
 * Setup design logic default entities.
 */
function _pece_design_logic_ensure_entities() {
  module_load_include('inc', 'pece', 'pece.functions');

  $path_to_module = drupal_get_path('module', 'pece_design_logic');
  $path_to_defaults = drupal_realpath($path_to_module . '/defaults');

  $design_logic_items = array(
    'alt_ontology',
    'crossing_scales_working_double_binds',
    'explanatory_pluralism',
    'juxtapositional_logics',
    'pursuing_differential_reproduction',
    'scruffie_contours_and_blurred_focus',
    'transmuting_ambivalences_of_meaning',
    'valuing_noise',
  );

  foreach ($design_logic_items as $name) {
    $path_to_design_logic_info_file = "{$path_to_defaults}/{$name}.yml";

    if (file_exists($path_to_design_logic_info_file)) {
      $design_logic_info_raw = file_get_contents($path_to_design_logic_info_file);
      $design_logic_info = pece_parse_yaml($design_logic_info_raw);

      $path_to_design_logic_thumbnail = "{$path_to_defaults}/files/{$design_logic_info['thumbnail']}";
      if (file_exists($path_to_design_logic_thumbnail)) {
        $design_logic_info['thumbnail'] = $path_to_design_logic_thumbnail;
      }

      _pece_design_logic_ensure_item($name, $design_logic_info);
    }
  }
}

/**
 * Ensures the existance of a design logic item.
 *
 * @param $name
 *   The kraftwagen itemname to use as unique id.
 *
 * @param $info
 *   Array with data for the item's fields.
 *
 * @return object
 *   An entity object or NULL if not found/not able to create.
 */
function _pece_design_logic_ensure_item($name, $info) {
  module_load_include('inc', 'kw_itemnames');

  $item_id = kw_itemnames_name_get_item_id('design_logic', $name);
  $item = empty($item_id) ? null : kw_itemnames_item_load('design_logic', $item_id);

  if (!empty($item)) {
    return $item;
  }

  $item_values = array(
    'title' => $info['title'],
    'type' => 'design_logic',
  );

  if (!empty($info['description'])) {
    $item_values['field_description'] = array(
      LANGUAGE_NONE => array(
        0 => array(
          'value' => $info['description'],
          'format' => 'panopoly_html_text',
        ),
      ),
    );
  }

  if (!empty($info['credits'])) {
    $item_values['field_image_credits'] = array(
      LANGUAGE_NONE => array(
        0 => array(
          'title' => $info['credits']['title'],
          'url' => $info['credits']['url'],
        ),
      ),
    );
  }

  if (!empty($info['thumbnail'])) {
    $file = (object) array(
      'uid' => 1,
      'uri' => $info['thumbnail'],
      'filemime' => file_get_mimetype($info['thumbnail']),
      'status' => 1,
    );

    $item_values['field_thumbnail'] = array(
      LANGUAGE_NONE => array(
        0 => (array) file_copy($file, 'public://'),
      ),
    );
  }

  return kw_itemnames_ensure('design_logic', $name, array(), $item_values);
}
